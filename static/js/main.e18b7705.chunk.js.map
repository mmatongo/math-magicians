{"version":3,"sources":["components/CalcButton.js","logic/operate.js","components/Calculator.js","logic/calculate.js","App.js","reportWebVitals.js","index.js"],"names":["CalcButton","props","state","handleClick","bind","this","text","onClick","mathObj","type","className","React","Component","operate","numberOne","numberTwo","operation","one","Big","two","plus","toString","minus","times","div","err","mod","Error","Calculator","calcObj","handleCalculate","obj","buttonName","setState","total","next","match","includes","parseFloat","screen","Object","keys","length","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e18b7705.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass CalcButton extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    const { text, onClick, mathObj } = this.props;\n    onClick(mathObj, text);\n  }\n\n  render() {\n    const { text } = this.props;\n    return (\n      <button type=\"button\" className=\"calc-buttons\" onClick={this.handleClick}>{text}</button>\n    );\n  }\n}\n\nCalcButton.propTypes = {\n  text: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n  mathObj: PropTypes.objectOf(PropTypes.string).isRequired,\n};\n\nexport default CalcButton;\n","import Big from 'big.js';\n\nexport default function operate(numberOne, numberTwo, operation) {\n  const one = Big(numberOne);\n  const two = Big(numberTwo);\n  if (operation === '+') {\n    return one.plus(two).toString();\n  }\n  if (operation === '-') {\n    return one.minus(two).toString();\n  }\n  if (operation === 'x') {\n    return one.times(two).toString();\n  }\n  if (operation === 'รท') {\n    try {\n      return one.div(two).toString();\n    } catch (err) {\n      return \"Can't divide by 0.\";\n    }\n  }\n  if (operation === '%') {\n    return one.mod(two).toString();\n  }\n  throw Error(`Unknown operation '${operation}'`);\n}\n","import React from 'react';\nimport CalcButton from './CalcButton';\nimport calculate from '../logic/calculate';\n\nclass Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      calcObj: {},\n    };\n    this.handleCalculate = this.handleCalculate.bind(this);\n  }\n\n  handleCalculate(calcObj, text) {\n    this.setState({ calcObj: calculate(calcObj, text) });\n  }\n\n  render() {\n    const { calcObj } = this.state;\n\n    let screen = '0';\n    if (Object.keys(calcObj).length === 0 || (calcObj.total === null\n      && calcObj.next === null\n      && calcObj.operation === null)) {\n      screen = '0';\n    } else {\n      screen = calcObj.next != null ? calcObj.next : calcObj.total;\n    }\n\n    return (\n      <div className=\"calc-body\">\n        <div className=\"calc-screen\">\n          {screen}\n        </div>\n        <div className=\"keyboard\">\n          <div className=\"key-digits\">\n            <CalcButton text=\"AC\" onClick={this.handleCalculate} mathObj={calcObj} />\n            <CalcButton text=\"+/-\" onClick={this.handleCalculate} mathObj={calcObj} />\n            <CalcButton text=\"%\" onClick={this.handleCalculate} mathObj={calcObj} />\n            <CalcButton text=\"7\" onClick={this.handleCalculate} mathObj={calcObj} />\n            <CalcButton text=\"8\" onClick={this.handleCalculate} mathObj={calcObj} />\n            <CalcButton text=\"9\" onClick={this.handleCalculate} mathObj={calcObj} />\n            <CalcButton text=\"4\" onClick={this.handleCalculate} mathObj={calcObj} />\n            <CalcButton text=\"5\" onClick={this.handleCalculate} mathObj={calcObj} />\n            <CalcButton text=\"6\" onClick={this.handleCalculate} mathObj={calcObj} />\n            <CalcButton text=\"1\" onClick={this.handleCalculate} mathObj={calcObj} />\n            <CalcButton text=\"2\" onClick={this.handleCalculate} mathObj={calcObj} />\n            <CalcButton text=\"3\" onClick={this.handleCalculate} mathObj={calcObj} />\n            <CalcButton text=\"0\" onClick={this.handleCalculate} mathObj={calcObj} />\n            <div className=\"key-dot\">\n              <CalcButton text=\".\" onClick={this.handleCalculate} mathObj={calcObj} />\n            </div>\n          </div>\n          <div className=\"operators\">\n            <CalcButton text=\"รท\" onClick={this.handleCalculate} mathObj={calcObj} />\n            <CalcButton text=\"x\" onClick={this.handleCalculate} mathObj={calcObj} />\n            <CalcButton text=\"-\" onClick={this.handleCalculate} mathObj={calcObj} />\n            <CalcButton text=\"+\" onClick={this.handleCalculate} mathObj={calcObj} />\n            <CalcButton text=\"=\" onClick={this.handleCalculate} mathObj={calcObj} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Calculator;\n","import operate from './operate';\n\nfunction isNumber(item) {\n  return !!item.match(/[0-9]+/);\n}\n\n/**\n * Given a button name and a calculator data object, return an updated\n * calculator data object.\n *\n * Calculator data object contains:\n *   total:s      the running total\n *   next:String       the next number to be operated on with the total\n *   operation:String  +, -, etc.\n */\nexport default function calculate(obj, buttonName) {\n  if (buttonName === 'AC') {\n    return {\n      total: null,\n      next: null,\n      operation: null,\n    };\n  }\n\n  if (isNumber(buttonName)) {\n    if (buttonName === '0' && obj.next === '0') {\n      return {};\n    }\n    // If there is an operation, update next\n    if (obj.operation) {\n      if (obj.next) {\n        return { ...obj, next: obj.next + buttonName };\n      }\n      return { ...obj, next: buttonName };\n    }\n    // If there is no operation, update next and clear the value\n    if (obj.next) {\n      return {\n        next: obj.next + buttonName,\n        total: null,\n      };\n    }\n    return {\n      next: buttonName,\n      total: null,\n    };\n  }\n\n  if (buttonName === '.') {\n    if (obj.next) {\n      if (obj.next.includes('.')) {\n        return { ...obj };\n      }\n      return { ...obj, next: `${obj.next}.` };\n    }\n    if (obj.operation) {\n      return { next: '0.' };\n    }\n    if (obj.total) {\n      if (obj.total.includes('.')) {\n        return {};\n      }\n      return { total: `${obj.total}.` };\n    }\n    return { total: '0.' };\n  }\n\n  if (buttonName === '=') {\n    if (obj.next && obj.operation) {\n      return {\n        total: operate(obj.total, obj.next, obj.operation),\n        next: null,\n        operation: null,\n      };\n    }\n    // '=' with no operation, nothing to do\n    return {};\n  }\n\n  if (buttonName === '+/-') {\n    if (obj.next) {\n      return { ...obj, next: (-1 * parseFloat(obj.next)).toString() };\n    }\n    if (obj.total) {\n      return { ...obj, total: (-1 * parseFloat(obj.total)).toString() };\n    }\n    return {};\n  }\n\n  // Button must be an operation\n\n  // When the user presses an operation button without having entered\n  // a number first, do nothing.\n  // if (!obj.next && !obj.total) {\n  //  return {};\n  // }\n\n  // User pressed an operation after pressing '='\n  if (!obj.next && obj.total && !obj.operation) {\n    return { ...obj, operation: buttonName };\n  }\n\n  // User pressed an operation button and there is an existing operation\n  if (obj.operation) {\n    if (obj.total && !obj.next) {\n      return { ...obj, operation: buttonName };\n    }\n\n    return {\n      total: operate(obj.total, obj.next, obj.operation),\n      next: null,\n      operation: buttonName,\n    };\n  }\n\n  // no operation yet, but the user typed one\n\n  // The user hasn't typed a number yet, just save the operation\n  if (!obj.next) {\n    return { operation: buttonName };\n  }\n\n  // save the operation and shift 'next' into 'total'\n  return {\n    total: obj.next,\n    next: null,\n    operation: buttonName,\n  };\n}\n","import React from 'react';\nimport Calculator from './components/Calculator';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Calculator />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then((\n      {\n        getCLS, getFID, getFCP, getLCP, getTTFB,\n      },\n    ) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}